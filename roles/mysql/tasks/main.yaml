- name: Coping MySQL repo 
  ansible.builtin.copy:
    src: mysql.repo
    dest: /etc/yum.repos.d/mysql.repo

- name: Install MySQL Server
  ansible.builtin.yum:
    name: 
       - mysql-community-server
       - MySQL-python
    state: installed

- name: starting MySQL Service
  ansible.builtin.systemd:
    name: mysqld
    state: started
    enabled: yes

- name: Get MySQL version with non-default credentials
  community.mysql.mysql_info:
    login_user: root
    login_password: RoboShop@1
  ignore_errors: yes
  register: stat

- name: password reset block 
  when: stat.failed 
  block:
      - name: fetch mysql default password
        ansible.builtin.shell: grep 'temporary password' /var/log/mysqld.log | awk '{print $NF}'
        register: DEFAULT_ROOT_PASSWORD

      - name: Coping PASSWD reset file
        ansible.builtin.copy:
            src: root_password.sql
            dest: /tmp/root_password.sql

      - name: reset mysql password
        ansible.builtin.shell: mysql --connect-expired-password -uroot -p"{{DEFAULT_ROOT_PASSWORD.stdout}}" < /tmp/root_password.sql
        register: DEFAULT_ROOT_PASSWORD


# - name: Install PyMySQL 
#   pip: 
#     name: PyMySQL  
#     executable: pip3



# - name: Checking Default Root Password
#   block:
#     - name: Fetch MySQL version to check the DB Connection
#       mysql_info:
#         login_user: root
#         login_password: "{{DB_PASSWORD}}"
#         filter: version
#   rescue:
#     - name: Load MYSQL Log File
#       ansible.builtin.slurp:
#         src: /var/log/mysqld.log
#       register: mysql_log

#     - name: Declare Facts
#       ansible.builtin.set_fact:
#         DEFAULT_PASS: "{{mysql_log['content'] | b64decode | regex_findall('.*temporary password.*') | join(' ') |split(' ') | last }}"

#     - name: Change MySQL
#       ansible.builtin.shell: echo "ALTER USER 'root'@'localhost' IDENTIFIED BY '{{DB_PASSWORD}}';" | mysql --connect-expired-password -uroot -p"{{DEFAULT_PASS}}"

# - name: Check Validate plugin exists
#   ansible.builtin.shell: echo "uninstall plugin validate_password;" | mysql -uroot -p{{DB_PASSWORD}}
#   ignore_errors: yes

# - name: Download and extracting MySQL 
#   ansible.builtin.include_role:
#     name: common
#     tasks_from: download

# - name: Load Schema
#   community.mysql.mysql_db:
#     state: import
#     name: all
#     target: /tmp/mysql-main/shipping.sql
#     login_user: root
#     login_password: "{{DB_PASSWORD}}"


