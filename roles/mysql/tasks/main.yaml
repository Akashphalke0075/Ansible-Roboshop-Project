- name: Coping MySQL repo 
  ansible.builtin.copy:
    src: mysql.repo
    dest: /etc/yum.repos.d/mysql.repo

- name: Install MySQL Server
  ansible.builtin.yum:
    name: 
       - mysql-community-server
       - MySQL-python
    state: installed

- name: starting MySQL Service
  ansible.builtin.systemd:
    name: mysqld
    state: started
    enabled: yes

- name: Get MySQL version with non-default credentials
  community.mysql.mysql_info:
    login_user: root
    login_password: RoboShop@1
  ignore_errors: yes
  register: stat

- name: password reset block 
  when: stat.failed 
  block:
      - name: fetch mysql default password
        ansible.builtin.shell: grep 'temporary password' /var/log/mysqld.log | awk '{print $NF}'
        register: DEFAULT_ROOT_PASSWORD

      - name: Coping PASSWD reset file
        ansible.builtin.copy:
            src: root_password.sql
            dest: /tmp/root_password.sql

      - name: reset mysql password
        ansible.builtin.shell: mysql --connect-expired-password -uroot -p"{{DEFAULT_ROOT_PASSWORD.stdout}}" < /tmp/root_password.sql
        register: DEFAULT_ROOT_PASSWORD

- name: checking password validate plugin
  ansible.builtin.shell: echo show plugins; | mysql -uroot -pRoboShop@1 | grep validate_password
  register: PLUGIN_INFO      
  ignore_errors: yes

- name: uninstalled password validate plugin
  # when: PLUGIN_INFO.rc == 0
  block: 
      - name: copyning password validate command
        ansible.builtin.copy:
          src: password_validate.mysql
          dest: /tmp/password_validate.mysql

      - name: uninstall plugin
        ansible.builtin.shell: mysql --connect-expired-password -uroot -pRoboShop@1 < /tmp/password_validate.mysql

- name: download and extract mysql
  ansible.builtin.include_role:
    name: common
    tasks_from: download

- name: load schema
  community.mysql.mysql_db:
    state: dump
    name: all
    target: /tmp/mysql-main/shipping.mysql
    login_user: root
    login_password: RoboShop@1